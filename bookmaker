#!/usr/bin/env python

import argparse
from commands import getoutput

def parseargs():
	parser = argparse.ArgumentParser(description='DIY Books from PDFs')

	parser.add_argument('--paper', type=paper, default='a4', help='a4 | letter (Default is a4)')
	parser.add_argument('--type', type=type, default='auto', help='auto | chapbook | book (Default is auto)')
	parser.add_argument('input', help='PDF to convert into a book')
	parser.add_argument('output', help='Where to store the new book')

	return parser.parse_args()

# validates book type selection
def type(string):
	string = string.lower()
	if string not in ['auto', 'chapbook', 'book']:
		raise argparse.ArgumentTypeError("must be auto, chapbook, or book.")
	return string

# validates paper selection
def paper(string):
	string = string.lower()
	if string not in ['a4', 'letter']:
		raise argparse.ArgumentTypeError("must be a4 or letter.")
	return string

def main():
	args = parseargs()

	if args.type == 'auto':
		npages = int(getoutput('gs -sDEVICE=bbox -dNOPAUSE -dBATCH "' + args.input + '" 2<&1|grep -c %%BoundingBox'))
		if npages <= 24:
			args.type = 'chapbook'
	
	print 'Creating a ' + args.type + ' on ' + args.paper + ' paper.'


if __name__ == '__main__':
	main()